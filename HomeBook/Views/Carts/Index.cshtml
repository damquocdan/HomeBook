@model IEnumerable<HomeBook.Models.Cart>

@{
    ViewData["Title"] = "Giỏ hàng";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <h1 class="my-4 text-danger"><i class="bi bi-cart-fill me-2"></i> Giỏ Hàng Của Bạn</h1>

    @if (!Model.Any())
    {
        <div class="alert alert-info">
            Giỏ hàng của bạn đang trống. <a asp-controller="Books" asp-action="Index" class="text-danger">Tiếp tục mua sắm</a>
        </div>
    }
    else
    {
        <div class="card border-danger">
            <div class="card-body">
                <table class="table table-hover">
                    <thead class="bg-danger text-white">
                        <tr>
                            <th>Sách</th>
                            <th>Đơn giá</th>
                            <th>Số lượng</th>
                            <th>Thành tiền</th>
                            <th>Thao tác</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Book.BookTitle)
                                    <br />
                                    <small class="text-muted">ID: @item.Book.BookId</small>
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Book.Price) VNĐ
                                </td>
                                <td>
                                    <input type="number" class="form-control form-control-sm w-25 d-inline quantity-input"
                                           min="1" value="@item.Quantity" data-cart-id="@item.CartId" />
                                </td>
                                <td class="subtotal" data-price="@item.Book.Price">
                                    @(item.Book.Price * item.Quantity) VNĐ
                                </td>
                                <td>
                                    <form asp-action="DeleteConfirmed" method="post" onsubmit="return confirm('Bạn có chắc muốn xóa sản phẩm này?')">
                                        <input type="hidden" name="id" value="@item.CartId" />
                                        <button type="submit" class="btn btn-danger btn-sm">
                                            <i class="bi bi-trash-fill"></i> Xóa
                                        </button>
                                    </form>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

                <div class="text-right mt-3">
                    <h4>
                        Tổng cộng:
                        <span class="text-danger total-amount">
                            @Model.Sum(item => item.Book.Price * item.Quantity) VNĐ
                        </span>
                    </h4>
                </div>
            </div>
        </div>

        <div class="mt-3 d-flex justify-content-between">
            <a asp-controller="Books" asp-action="Index" class="btn btn-outline-secondary"><i class="bi bi-arrow-left"></i> Tiếp tục mua sắm</a>
            <a asp-action="ConfirmAddress" class="btn btn-success"><i class="bi bi-check-circle-fill"></i> Thanh toán</a>
        </div>
    }
</div>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            $('.quantity-input').on('change', function () {
                var $input = $(this);
                var cartId = $input.data('cart-id');
                var quantity = $input.val();

                if (quantity < 1) {
                    $input.val(1);
                    updateSubtotalAndTotal(cartId, 1);
                    return;
                }

                $.ajax({
                    url: '@Url.Action("UpdateQuantity", "Carts")',
                    type: 'POST',
                    data: {
                        cartId: cartId,
                        quantity: quantity,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (result) {
                        if (result.success) {
                            updateSubtotalAndTotal(cartId, quantity);
                        } else {
                            $input.val(result.currentQuantity || 1);
                            updateSubtotalAndTotal(cartId, result.currentQuantity || 1);
                        }
                    },
                    error: function () {
                        $input.val(1);
                        updateSubtotalAndTotal(cartId, 1);
                    }
                });

                function updateSubtotalAndTotal(cartId, quantity) {
                    var price = parseFloat($('tr').has('input[data-cart-id="' + cartId + '"]').find('.subtotal').data('price'));
                    var subtotal = price * quantity;
                    $('tr').has('input[data-cart-id="' + cartId + '"]').find('.subtotal').text(subtotal.toFixed(0) + ' VNĐ');

                    var total = 0;
                    $('.subtotal').each(function () {
                        var subtotalText = $(this).text().replace(' VNĐ', '');
                        total += parseFloat(subtotalText);
                    });
                    $('.total-amount').text(total.toFixed(0) + ' VNĐ');
                }
            });
        });
    </script>
}

<style>
    .text-danger {
        color: #fb5353 !important;
    }

    .bg-danger {
        background-color: #fb5353 !important;
    }

    .border-danger {
        border-color: #fb5353 !important;
    }

    .btn-danger {
        background-color: #fb5353;
        border-color: #fb5353;
    }

        .btn-danger:hover {
            background-color: #d94242;
            border-color: #d94242;
        }

    .btn-outline-danger {
        color: #fb5353;
        border-color: #fb5353;
    }

        .btn-outline-danger:hover {
            background-color: #fb5353;
            border-color: #fb5353;
            color: white;
        }

    .table th, .table td {
        vertical-align: middle;
    }

    .w-25 {
        width: 80px !important;
    }
</style>